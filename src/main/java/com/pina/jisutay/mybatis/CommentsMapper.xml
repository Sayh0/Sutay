<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="comments">
	<select id="getData" parameterType="commentsDto" resultType="commentsDto">
		SELECT num, cmt.writer, us.name, room_img, score,
			TO_CHAR(cmt.regdate, 'YYYY.MM.DD HH24:MI') AS regdate,
			content, target_id, room_num, comment_num, deleted, us.profile
		FROM comments cmt
		INNER JOIN users us
		ON cmt.writer=us.id
		WHERE room_num=#{room_num} AND num=#{num}
	</select>
	
	<select id="getListRegdate" parameterType="commentsDto" resultType="commentsDto">
		SELECT *
		FROM
			(SELECT result1.*, ROWNUM AS rnum
			FROM
				(SELECT num, cmt.writer, us.name, room_img, score,
					TO_CHAR(cmt.regdate, 'YYYY.MM.DD HH24:MI') AS regdate,
					content, target_id, room_num, comment_num, deleted, us.profile
				FROM comments cmt
				INNER JOIN users us
				ON cmt.writer=us.id
				WHERE room_num=#{room_num} AND num=comment_num
				ORDER BY comment_num DESC, num ASC) result1)
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<select id="getListHighScore" parameterType="commentsDto" resultType="commentsDto">
		SELECT *
		FROM
			(SELECT result1.*, ROWNUM AS rnum
			FROM
				(SELECT num, cmt.writer, us.name, room_img, score,
					TO_CHAR(cmt.regdate, 'YYYY.MM.DD HH24:MI') AS regdate,
					content, target_id, room_num, comment_num, deleted, us.profile
				FROM comments cmt
				INNER JOIN users us
				ON cmt.writer=us.id
				WHERE room_num=#{room_num} AND num=comment_num
				ORDER BY score DESC, num DESC) result1)
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<select id="getListLowScore" parameterType="commentsDto" resultType="commentsDto">
		SELECT *
		FROM
			(SELECT result1.*, ROWNUM AS rnum
			FROM
				(SELECT num, cmt.writer, us.name, room_img, score,
					TO_CHAR(cmt.regdate, 'YYYY.MM.DD HH24:MI') AS regdate,
					content, target_id, room_num, comment_num, deleted, us.profile
				FROM comments cmt
				INNER JOIN users us
				ON cmt.writer=us.id
				WHERE room_num=#{room_num} AND num=comment_num
				ORDER BY score ASC, num DESC) result1)
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<select id="getScoreSum" parameterType="int" resultType="double">
		SELECT ROUND(SUM(score)/COUNT(score), 1) AS score
		FROM comments
		WHERE room_num=#{room_num} AND num=comment_num
	</select>
	
	<select id="getAllCount" parameterType="int" resultType="int">
		SELECT COUNT(num) AS allCount
		FROM comments
		WHERE room_num=#{room_num}
	</select>
	
	<select id="getCommCommList" parameterType="commentsDto" resultType="commentsDto">
		SELECT num, cmt.writer, us.name, room_img, score,
			TO_CHAR(cmt.regdate, 'YYYY.MM.DD HH24:MI') AS regdate,
			content, target_id, room_num, comment_num, deleted, us.profile
		FROM comments cmt
		INNER JOIN users us
		ON cmt.writer=us.id
		WHERE room_num=#{room_num} AND comment_num=#{comment_num} AND num!=comment_num
		ORDER BY num ASC
	</select>
	
	<select id="getCommCommCount" parameterType="commentsDto" resultType="int">
		SELECT countNum
		FROM (SELECT result1.*, ROWNUM as rnum
			FROM (SELECT comment_num, COUNT(num) as countNum
				FROM comments
				WHERE room_num=#{room_num}
				GROUP BY comment_num
				ORDER BY comment_num DESC) result1)
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<select id="getCount" parameterType="int" resultType="int">
		SELECT COUNT(num) AS totalNum FROM comments WHERE room_num=#{room_num} AND num=comment_num
	</select>
	
	<select id="getSequence" resultType="int">
		SELECT comments_seq.NEXTVAL
		FROM DUAL
	</select>
	
	<insert id="insert" parameterType="commentsDto">
		INSERT INTO comments (num, writer, target_id, regdate, content, room_num, comment_num, score, deleted)
		VALUES 	(#{num}, #{writer}, #{target_id}, SYSDATE, #{content}, #{room_num}, #{comment_num}, #{score}, 'no')	
	</insert>
	
	<update id="delete" parameterType="int">
		UPDATE comments
		SET deleted='yes'
		WHERE num=#{num}
	</update>
	
	<update id="update" parameterType="commentsDto">
		UPDATE comments
		SET content=#{content}
		WHERE num=#{num}
	</update>
	
	<!-- 마이페이지에 내가 쓴 글 불러오기 -->
	<select id="getMyCommList" resultType="commentsDto" parameterType="commentsDto">
		SELECT num, target_id, writer, regdate, content, room_num
		FROM comments
	</select>
	
		<!-- 회원(개인) 결제 취소 -->
	<delete id="deleteComm" parameterType="commentsDto">
		DELETE 
		FROM comments
		WHERE num=#{num}
	</delete>
</mapper>